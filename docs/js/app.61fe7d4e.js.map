{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?953d","webpack:///./src/App.vue","webpack:///./src/utils/runTime.ts","webpack:///./src/utils/index.ts","webpack:///./src/game/sprite/ImageSprite.ts","webpack:///./src/game/sprite/Cloud.ts","webpack:///./src/game/sprite/Ground.ts","webpack:///./src/utils/eventBus.ts","webpack:///./src/game/sprite/Moon.ts","webpack:///./src/game/sprite/star.ts","webpack:///./src/game/role/CollisionBox.ts","webpack:///./src/game/sprite/Obstacle.ts","webpack:///./src/game/stage/DistanceMeter.ts","webpack:///./src/game/stage/index.ts","webpack:///./src/game/sprite/Trex.ts","webpack:///./src/game/role/Rule.ts","webpack:///./src/game/index.ts","webpack:///./src/App.vue?1441","webpack:///./src/App.vue?b6e0","webpack:///./src/App.vue?7b61","webpack:///./src/registerServiceWorker.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_c","_self","_setupProxy","attrs","ref","staticClass","style","gameCanvasStyle","config","CANVAS_WIDTH","CANVAS_HEIGHT","staticRenderFns","RunTime","_classCallCheck","FPS","_createClass","fps","runTime","getRandomNum","min","max","Math","floor","random","getTimeStamp","performance","now","ImageSprite","image","src","appendAsyncConstructor","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Promise","resolve","reject","onload","onerror","stop","Image","Cloud","canvasCtx","remove","cloudGap","MIN_CLOUD_GAP","MAX_CLOUD_GAP","X","Game","Y","MAX_SKY_LEVEL","MIN_SKY_LEVEL","draw","save","drawImage","imageSprite","sprite","WIDTH","HEIGHT","restore","speed","isHide","ceil","Ground","xPosList","spriteXPosList","bumpThreshold","animationWidth","init","groundIndex","increment","otherGroundIndex","getRandomType","deltaTime","currentSpeed","getFPS","updateXPos","Number","eventBus","Vue","Moon","cumulativeTime","Stage","isNight","ALTERNATE_TIME","$emit","Star","spriteList","MIN_GAD","CollisionBox","Obstacle","currentSpriteIndex","dimensions","width","height","isCactus","kindCollisionBoxMap","CACTUS_SINGLE","XScale","YScale","CACTUS_DOUBLE","CACTUS_THREE","CACTUS_FOUR","PTERODACTYL","kindTypeList","kindType","kindSpriteMap","startsWith","coefficient","cactusVolumeList","round","includes","FOOT_SINK","gap","getGap","collisionBoxs","setCollisionBoxs","_this","PTERODACTYL_FREQUENCY","oldX","oldY","forEach","box","setPosition","_this2","collsionConfigList","map","item","_Obstacle$config","CACUTS_MIN_GAD","PTERODACTYL_MIN_GAD","MIN_GAP_COEFFICIENT","MAX_GAP_COEFFICIENT","initMinGap","minGap","maxGap","DistanceMeter","maxScoreUnits","isFlash","alearyChangeTime","alearyFlashTime","NUMBER_WIDTH","highScore","parseInt","localStorage","$on","contrastScore","drawHighScore","unitIndex","isHigh","arguments","undefined","leaveBlankCount","spriteX","canvasX","getActualDistance","oldScore","currentMaxScore","isDraw","showScore","FLASH_TIME","FLAGH_FREQUENCY","scoreUnitValueList","String","split","complementZeroByMaxUnit","number","index","_this3","globalAlpha","highScoreUnitList","unshift","numberList","numberSpriteDistance","wordsSprite","starList","astralSpeed","cloudList","obstacleList","ground","moon","matches","generateStarList","update","updateMoonAndStar","updateCloudList","updateObstacleList","updateStarList","star","addCould","starCount","MAX_STAR","lastStar","filter","obstacle","obstacleCount","lastObstacle","cloudSpeed","BG_CLOUD_SPEED","cloud","cloudCount","lastCloud","_Stage$config","MAX_CLOUDS","CLOUD_FREQUENCY","BUMPY_THRESHOLD","Trex","currentBehaviorIndex","baseY","FOOTSINK","behaviorCollsionBoxMap","WAITING","RUNNING","JUMPING","DUCKING","CRASHED","status","blinkTimeout","blinkDelay","isWaitBlik","jumpCount","jumpLimitY","MAX_JUMP_HEIGHT","jumpVelocity","INIITAL_JUMP_VELOCITY","landing","speedDrop","cloneDeep","oldStatus","statusUpdateMap","startWait","updateJump","updateRunAndDuck","updateCrashed","differenceX","differenceY","_Trex$behavior$this$s","behavior","spriteWidth","spriteHeight","WIDTH_DUCK","HEIGHT_DUCK","currentFrameStamp","framesElapsed","SPEED_DROP_COEFFICIENT","abs","GRAVITY","BLINK_TIMING","setTimeout","clearTimeout","behaviorFrameStamp","MIN_JUMP_HEIGHT","Rule","trexBox","obstacleBox","trexBoxs","obstacleBoxs","obBox","detectCollision","_Game$config","textSprite","buttonSprite","options","consumeTime","reqFrameId","_objectSpread","stage","tRex","distanceMeter","rule","setSpeed","INIT_SPEED","startListening","clearCanvas","gameBoot","increaseSpeed","readyObstacle","find","detectCollisionList","scheduleNextUpdate","requestAnimationFrame","clearRect","cancelAnimationFrame","gameOver","reSet","e","keyCode","startJump","startDuck","endDuck","document","onclick","onClick","onkeydown","onkeyup","onCrashed","PLAYER_COUNT","LIMIT_SPEED","App","_Vue","_inherits","_super","_createSuper","magnification","transform","concat","gameRef","getContext","_this$game","game","innerWidth","documentElement","setProperty","gameCtx","setListener","onResize","onresize","mediaList","matchMedia","onchange","onUpdateBackground","_mounted","start","mounted","__decorate","Ref","Component","component","register","process","ready","registered","cached","updatefound","updated","offline","error","productionTip","h","$mount"],"mappings":"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","file":"js/app.61fe7d4e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/.pnpm/registry.npmmirror.com+mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/.pnpm/registry.npmmirror.com+css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@15.11.1_b82239905f60f1b9d11e08b9770d1ccf/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/.pnpm/registry.npmmirror.com+postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/.pnpm/registry.npmmirror.com+sass-loader@8.0.2_node-sass@4.14.1/node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/.pnpm/registry.npmmirror.com+cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@15.11.1_b82239905f60f1b9d11e08b9770d1ccf/node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=4f094ad0&prod&lang=scss\"","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{attrs:{\"id\":\"app\"}},[_c('canvas',{ref:\"gameRef\",staticClass:\"app__game\",style:(_vm.gameCanvasStyle),attrs:{\"width\":_vm.config.CANVAS_WIDTH,\"height\":_vm.config.CANVAS_HEIGHT}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class RunTime {\r\n  private FPS = 120\r\n\r\n  getFPS() {\r\n    return this.FPS\r\n  }\r\n\r\n  setFPS(fps: number) {\r\n    this.FPS = fps\r\n  }\r\n}\r\nconst runTime = new RunTime()\r\nexport default runTime\r\n","import runTime from './runTime'\r\n\r\n/**\r\n * 得到随机值\r\n * @param {number} min\r\n * @param {number} max\r\n * @param {number}\r\n */\r\nexport function getRandomNum(min: number, max: number) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\n/**\r\n * 得到当前性能测量开始的时间戳\r\n * @return {number}\r\n */\r\nexport function getTimeStamp() {\r\n  return performance.now()\r\n}\r\n\r\nexport default { runTime }\r\n","import { appendAsyncConstructor } from 'async-constructor'\r\nexport default class ImageSprite {\r\n  static image: HTMLImageElement = new Image()\r\n\r\n  constructor() {\r\n    console.log('载入精灵图')\r\n    ImageSprite.image.src = 'sprite.png'\r\n    appendAsyncConstructor(this, async () => {\r\n      await new Promise((resolve, reject) => {\r\n        ImageSprite.image.onload = () => resolve()\r\n        ImageSprite.image.onerror = () => reject()\r\n      })\r\n    })\r\n  }\r\n}\r\n","import { getRandomNum } from '@/utils'\r\nimport imageSprite from './ImageSprite'\r\nimport { Sprite } from '../types'\r\nimport Game from '..'\r\n\r\n/**\r\n * 云朵\r\n * 没有碰撞体积的装饰物\r\n * @param {CanvasRenderingContext2D} canvasCtx 载入到实例的canvas2D上下文\r\n * @constructor\r\n */\r\nexport default class Cloud {\r\n  // 云朵的精灵图位置\r\n  static sprite: Sprite = { X: 164, Y: 2, WIDTH: 96, HEIGHT: 28 }\r\n  /**\r\n   * 云朵基本配置\r\n   * @enum {number}\r\n   */\r\n  static config = {\r\n    MAX_CLOUD_GAP: 800,\r\n    MAX_SKY_LEVEL: 60,\r\n    MIN_CLOUD_GAP: 200,\r\n    MIN_SKY_LEVEL: 142\r\n  }\r\n\r\n  // 是否移除状态\r\n  remove = false\r\n  // 当前云与下一朵云的间隙\r\n  cloudGap = getRandomNum(Cloud.config.MIN_CLOUD_GAP, Cloud.config.MAX_CLOUD_GAP)\r\n\r\n  // 基于容器坐标\r\n  X = Game.config.CANVAS_WIDTH\r\n  Y = getRandomNum(Cloud.config.MAX_SKY_LEVEL, Cloud.config.MIN_SKY_LEVEL)\r\n\r\n  constructor(public canvasCtx: CanvasRenderingContext2D) {\r\n    this.cloudGap = getRandomNum(Cloud.config.MIN_CLOUD_GAP, Cloud.config.MAX_CLOUD_GAP)\r\n    this.draw()\r\n  }\r\n  /**\r\n   * 绘制地面\r\n   */\r\n  draw() {\r\n    this.canvasCtx.save()\r\n    this.canvasCtx.drawImage(\r\n      imageSprite.image,\r\n      Cloud.sprite.X,\r\n      Cloud.sprite.Y,\r\n      Cloud.sprite.WIDTH,\r\n      Cloud.sprite.HEIGHT,\r\n      this.X,\r\n      this.Y,\r\n      Cloud.sprite.WIDTH,\r\n      Cloud.sprite.HEIGHT\r\n    )\r\n    this.canvasCtx.restore()\r\n  }\r\n\r\n  /**\r\n   * 更新云朵的位置\r\n   * @param speed\r\n   */\r\n  update(speed: number) {\r\n    if (!this.isHide) {\r\n      this.X -= Math.ceil(speed)\r\n      this.draw()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检测是否超出画布\r\n   */\r\n  get isHide() {\r\n    return this.X < -Cloud.sprite.WIDTH\r\n  }\r\n}\r\n","import runTime from '@/utils/runTime'\r\nimport imageSprite from './ImageSprite'\r\nimport { Sprite } from '../types'\r\nimport Game from '..'\r\n\r\n/**\r\n * 地面\r\n * 有两块地面组成，随机生成陡峭/平坦的地面\r\n * @param {CanvasRenderingContext2D} canvasCtx 载入到实例的canvas2D上下文\r\n * @param {Sprite} sprite 实例的精灵信息\r\n * @constructor\r\n */\r\nexport default class Ground {\r\n  // 地面的精灵图位置\r\n  static sprite: Sprite = { X: 0, Y: 104, WIDTH: 1200, HEIGHT: 24 }\r\n\r\n  // 容器中的双图X轴起点列表 [image1X,image2X]\r\n  xPosList = [Ground.sprite.X, Ground.sprite.WIDTH]\r\n  Y = 254\r\n  // 精灵图的双图X轴起点列表 [image1X,image2X]\r\n  spriteXPosList: number[] = []\r\n  // 板块碰撞隔值\r\n  bumpThreshold = 0.5\r\n\r\n  animationWidth = 160\r\n\r\n  constructor(public canvasCtx: CanvasRenderingContext2D) {\r\n    console.log('初始化地面')\r\n    this.spriteXPosList = [Ground.sprite.X, Ground.sprite.X + Ground.sprite.WIDTH]\r\n    this.bumpThreshold = 0.5\r\n    this.init()\r\n  }\r\n  init() {\r\n    this.canvasCtx.drawImage(\r\n      imageSprite.image,\r\n      this.spriteXPosList[0],\r\n      Ground.sprite.Y,\r\n      160,\r\n      Ground.sprite.HEIGHT,\r\n      this.xPosList[0],\r\n      this.Y,\r\n      160,\r\n      Ground.sprite.HEIGHT\r\n    )\r\n  }\r\n\r\n  draw() {\r\n    this.canvasCtx.drawImage(\r\n      imageSprite.image,\r\n      this.spriteXPosList[0],\r\n      Ground.sprite.Y,\r\n      Ground.sprite.WIDTH,\r\n      Ground.sprite.HEIGHT,\r\n      this.xPosList[0],\r\n      this.Y,\r\n      Ground.sprite.WIDTH,\r\n      Ground.sprite.HEIGHT\r\n    )\r\n\r\n    this.canvasCtx.drawImage(\r\n      imageSprite.image,\r\n      this.spriteXPosList[1],\r\n      Ground.sprite.Y,\r\n      Ground.sprite.WIDTH,\r\n      Ground.sprite.HEIGHT,\r\n      this.xPosList[1],\r\n      this.Y,\r\n      Ground.sprite.WIDTH,\r\n      Ground.sprite.HEIGHT\r\n    )\r\n  }\r\n\r\n  gameBoot() {\r\n    this.canvasCtx.drawImage(\r\n      imageSprite.image,\r\n      this.spriteXPosList[0],\r\n      Ground.sprite.Y,\r\n      this.animationWidth,\r\n      Ground.sprite.HEIGHT,\r\n      this.xPosList[0],\r\n      this.Y,\r\n      this.animationWidth,\r\n      Ground.sprite.HEIGHT\r\n    )\r\n    this.animationWidth += 50\r\n  }\r\n  /**\r\n   * 更新地面板块的X的位置\r\n   * @param {number} imageNumber 地面图序号.\r\n   * @param {number} increment\r\n   */\r\n  updateXPos(groundIndex: number, increment: number) {\r\n    const otherGroundIndex = groundIndex ? 0 : 1\r\n    this.xPosList[otherGroundIndex] -= increment\r\n    this.xPosList[groundIndex] = this.xPosList[otherGroundIndex] + Ground.sprite.WIDTH\r\n\r\n    if (this.xPosList[otherGroundIndex] <= -Ground.sprite.WIDTH) {\r\n      // 考虑速度过快情况\r\n      this.xPosList[otherGroundIndex] += Ground.sprite.WIDTH * 2\r\n      // 始终保持耦合\r\n      this.xPosList[groundIndex] = this.xPosList[otherGroundIndex] - Ground.sprite.WIDTH\r\n      this.spriteXPosList[otherGroundIndex] = this.getRandomType() + Ground.sprite.X\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @通用方法名  canvas更新\r\n   * @param {number} deltaTime\r\n   * @param {number} speed\r\n   */\r\n  update(deltaTime: number) {\r\n    const increment = Math.floor(\r\n      Game.currentSpeed * (runTime.getFPS() / 1000) * deltaTime\r\n    )\r\n    this.updateXPos(Number(this.xPosList[0] <= 0), increment)\r\n    this.draw()\r\n  }\r\n\r\n  /**\r\n   * 重置地面位置\r\n   */\r\n  reset() {\r\n    this.xPosList[0] = 0\r\n    this.xPosList[1] = Ground.sprite.WIDTH\r\n  }\r\n  /**\r\n   * 地图板块边界循环\r\n   */\r\n  getRandomType() {\r\n    return Math.random() > this.bumpThreshold ? Ground.sprite.WIDTH : 0\r\n  }\r\n}\r\n","// 事件总线\r\nimport Vue from 'vue'\r\nexport const eventBus = new Vue()\r\n","import imageSprite from './ImageSprite'\r\nimport { Sprite } from '../types'\r\nimport Game from '..'\r\nimport { eventBus } from '@/utils/eventBus'\r\nimport Stage from '../stage'\r\n\r\n/**\r\n * 月亮\r\n * 没有碰撞体积的装饰物\r\n * @param {CanvasRenderingContext2D} canvasCtx 载入到实例的canvas2D上下文\r\n * @constructor\r\n */\r\nexport default class Moon {\r\n  // 月亮的精灵图位置\r\n  static sprite: Sprite = { X: 1195, Y: 2, WIDTH: 39, HEIGHT: 80 }\r\n  /**\r\n   * 月亮基本配置\r\n   * @enum {number}\r\n   */\r\n  static config = {\r\n    MAX_SKY_LEVEL: 30,\r\n    MIN_SKY_LEVEL: 30,\r\n    ALTERNATE_TIME: 30000\r\n  }\r\n\r\n  cumulativeTime = 0\r\n\r\n  // 基于容器坐标\r\n  X = Game.config.CANVAS_WIDTH\r\n  Y = Moon.config.MIN_SKY_LEVEL\r\n\r\n  constructor(public canvasCtx: CanvasRenderingContext2D) {}\r\n  /**\r\n   * 绘制地面\r\n   */\r\n  draw() {\r\n    this.canvasCtx.drawImage(\r\n      imageSprite.image,\r\n      Moon.sprite.X,\r\n      Moon.sprite.Y,\r\n      Moon.sprite.WIDTH,\r\n      Moon.sprite.HEIGHT,\r\n      this.X,\r\n      this.Y,\r\n      Moon.sprite.WIDTH,\r\n      Moon.sprite.HEIGHT\r\n    )\r\n  }\r\n\r\n  /**\r\n   * 更新月亮的位置\r\n   * @param deltaTime\r\n   */\r\n  update(deltaTime: number, speed: number) {\r\n    this.cumulativeTime += deltaTime\r\n    if (Stage.isNight) {\r\n      this.isHide && (this.X = Game.config.CANVAS_WIDTH)\r\n      this.X -= speed\r\n      this.draw()\r\n    }\r\n    if (this.cumulativeTime >= Moon.config.ALTERNATE_TIME && this.isHide) {\r\n      eventBus.$emit('alternate', !Stage.isNight)\r\n      this.cumulativeTime = 0\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检测是否超出画布\r\n   */\r\n  get isHide() {\r\n    return this.X < -Moon.sprite.WIDTH\r\n  }\r\n}\r\n","import { getRandomNum } from '@/utils'\r\nimport imageSprite from './ImageSprite'\r\nimport { Sprite } from '../types'\r\nimport Game from '..'\r\nimport Stage from '../stage'\r\n\r\n/**\r\n * 星星\r\n * 没有碰撞体积的装饰物\r\n * @param {CanvasRenderingContext2D} canvasCtx 载入到实例的canvas2D上下文\r\n * @constructor\r\n */\r\nexport default class Star {\r\n  // 星星的精灵图位置\r\n  static spriteList: Sprite[] = [\r\n    { X: 1274, Y: 2, WIDTH: 20, HEIGHT: 18 },\r\n    { X: 1274, Y: 20, WIDTH: 20, HEIGHT: 18 },\r\n    { X: 1274, Y: 38, WIDTH: 20, HEIGHT: 18 }\r\n  ]\r\n  /**\r\n   * 星星基本配置\r\n   * @enum {number}\r\n   */\r\n\r\n  static config = {\r\n    MAX_SKY_LEVEL: 0,\r\n    MIN_SKY_LEVEL: 120,\r\n    MIN_GAD: 30\r\n  }\r\n  sprite: Sprite\r\n\r\n  // 基于容器坐标\r\n  X = Game.config.CANVAS_WIDTH\r\n  Y = getRandomNum(Star.config.MIN_SKY_LEVEL, Star.config.MAX_SKY_LEVEL)\r\n\r\n  constructor(public canvasCtx: CanvasRenderingContext2D, X?: number) {\r\n    X && (this.X = X)\r\n    this.sprite = Star.spriteList[getRandomNum(0, 2)]\r\n    this.draw()\r\n  }\r\n  /**\r\n   * 绘制地面\r\n   */\r\n  draw() {\r\n    this.canvasCtx.save()\r\n    this.canvasCtx.drawImage(\r\n      imageSprite.image,\r\n      this.sprite.X,\r\n      this.sprite.Y,\r\n      this.sprite.WIDTH,\r\n      this.sprite.HEIGHT,\r\n      this.X,\r\n      this.Y,\r\n      this.sprite.WIDTH,\r\n      this.sprite.HEIGHT\r\n    )\r\n    this.canvasCtx.restore()\r\n  }\r\n\r\n  /**\r\n   * 更新星星的位置\r\n   * @param speed\r\n   */\r\n  update(speed: number) {\r\n    if (Stage.isNight && !this.isHide) {\r\n      this.X -= speed\r\n      this.draw()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检测是否超出画布\r\n   */\r\n  get isHide() {\r\n    return this.X < -this.sprite.WIDTH\r\n  }\r\n}\r\n","// import Game from '..'\r\n\r\n/**\r\n * Collision box\r\n * @param  X X position.\r\n * @param  Y Y Position.\r\n * @param WIDTH  Width.\r\n * @param HEIGHT Height.\r\n * @constructor\r\n */\r\nexport default class CollisionBox {\r\n  constructor(\r\n    public X: number,\r\n    public Y: number,\r\n    public WIDTH: number,\r\n    public HEIGHT: number\r\n  ) {\r\n    // this.draw()\r\n  }\r\n  // draw(canvasCtx: CanvasRenderingContext2D) {\r\n  //   canvasCtx.lineWidth = 3\r\n  //   canvasCtx.strokeStyle = '#990000'\r\n  //   canvasCtx.strokeRect(this.X, this.Y, this.WIDTH, this.HEIGHT)\r\n  // }\r\n  /**\r\n   * 设置盒子体积\r\n   * @param width\r\n   * @param height\r\n   */\r\n  // setDimensions(width: number, height: number) {}\r\n\r\n  /**\r\n   * 设置盒子坐标\r\n   * @param X\r\n   * @param Y\r\n   */\r\n  setPosition(X: number, Y: number) {\r\n    this.X = X\r\n    this.Y = Y\r\n  }\r\n}\r\n","import imageSprite from './ImageSprite'\r\nimport { getRandomNum } from '@/utils'\r\nimport { Sprite, ObstacleType } from '../types'\r\nimport Game from '..'\r\nimport runTime from '@/utils/runTime'\r\nimport CollisionBox from '../role/CollisionBox'\r\n\r\n/**\r\n * 障碍物\r\n * @param canvasCtx //画布上下文\r\n * @constructor\r\n */\r\nexport default class Obstacle {\r\n  // 障碍物的精灵图信息\r\n  static kindSpriteMap = {\r\n    CACTUS_SINGLE: [{ X: 650, Y: 2, WIDTH: 52, HEIGHT: 100 }],\r\n    CACTUS_DOUBLE: [{ X: 702, Y: 2, WIDTH: 100, HEIGHT: 100 }],\r\n    CACTUS_THREE: [{ X: 650, Y: 2, WIDTH: 152, HEIGHT: 100 }],\r\n    CACTUS_FOUR: [{ X: 802, Y: 2, WIDTH: 150, HEIGHT: 100 }],\r\n    PTERODACTYL: [\r\n      { X: 260, Y: 14, WIDTH: 92, HEIGHT: 68 },\r\n      { X: 352, Y: 2, WIDTH: 92, HEIGHT: 60 }\r\n    ]\r\n  }\r\n  /**\r\n   * 障碍物基本配置\r\n   * @enum {number}\r\n   */\r\n  static config = {\r\n    FOOT_SINK: 20,\r\n    MAX_SKY_LEVEL: 0,\r\n    MIN_SKY_LEVEL: 120,\r\n    MAX_GAP_COEFFICIENT: 1.5,\r\n    MIN_GAP_COEFFICIENT: 0.6,\r\n    CACUTS_MIN_GAD: 200,\r\n    PTERODACTYL_MIN_GAD: 250,\r\n    PTERODACTYL_FREQUENCY: 500\r\n  }\r\n  // 仙人掌两种基于精灵转换的体积模式\r\n  static cactusVolumeList = [0.6, 1]\r\n\r\n  // 当前使用的精灵数据\r\n  sprite: Sprite\r\n  currentSpriteIndex = 0\r\n\r\n  // 实际画布的数据\r\n  dimensions = { width: 0, height: 0 }\r\n  X = Game.config.CANVAS_WIDTH\r\n  Y = 0\r\n  gap: number\r\n\r\n  // 是否仙人掌（用于区分翼龙）\r\n  isCactus = false\r\n  // 积累时间\r\n  cumulativeTime = 0\r\n\r\n  // 碰撞盒子的基本信息\r\n  readonly kindCollisionBoxMap = {\r\n    CACTUS_SINGLE: [\r\n      { XScale: 1, YScale: 206 - 182, width: 14, height: 38 },\r\n      { XScale: 48 - 32, YScale: 1, width: 18, height: 94 },\r\n      { XScale: 68 - 32, YScale: 202 - 182, width: 14, height: 40 }\r\n    ],\r\n    CACTUS_DOUBLE: [\r\n      { XScale: 1, YScale: 206 - 182, width: 14, height: 38 },\r\n      { XScale: 48 - 30, YScale: 1, width: 15, height: 94 },\r\n      { XScale: 66 - 30, YScale: 192 - 182, width: 30, height: 50 },\r\n      { XScale: 98 - 30, YScale: 1, width: 15, height: 94 },\r\n      { XScale: 116 - 30, YScale: 202 - 182, width: 14, height: 41 }\r\n    ],\r\n    CACTUS_THREE: [\r\n      { XScale: 1, YScale: 206 - 182, width: 14, height: 38 },\r\n      { XScale: 48 - 32, YScale: 1, width: 15, height: 94 },\r\n      { XScale: 66 - 32, YScale: 200 - 182, width: 30, height: 46 },\r\n      { XScale: 98 - 32, YScale: 1, width: 15, height: 94 },\r\n      { XScale: 120 - 32, YScale: 192 - 182, width: 26, height: 50 },\r\n      { XScale: 148 - 32, YScale: 1, width: 16, height: 94 },\r\n      { XScale: 168 - 32, YScale: 202 - 182, width: 14, height: 46 }\r\n    ],\r\n    CACTUS_FOUR: [\r\n      { XScale: 1, YScale: 206 - 182, width: 14, height: 38 },\r\n      { XScale: 48 - 32, YScale: 1, width: 15, height: 94 },\r\n      { XScale: 66 - 32, YScale: 200 - 182, width: 30, height: 46 },\r\n      { XScale: 98 - 32, YScale: 1, width: 15, height: 94 },\r\n      { XScale: 120 - 32, YScale: 192 - 182, width: 26, height: 50 },\r\n      { XScale: 148 - 32, YScale: 1, width: 16, height: 94 },\r\n      { XScale: 168 - 32, YScale: 202 - 182, width: 14, height: 46 }\r\n    ],\r\n    PTERODACTYL: [\r\n      [\r\n        { XScale: 0, YScale: 230 - 212, width: 6, height: 10 },\r\n        { XScale: 40 - 32, YScale: 220 - 212, width: 8, height: 20 },\r\n        { XScale: 49 - 32, YScale: 0, width: 14, height: 24 },\r\n        { XScale: 63 - 32, YScale: 230 - 212, width: 16, height: 48 },\r\n        { XScale: 80 - 32, YScale: 230 - 212, width: 40, height: 30 }\r\n      ],\r\n      [\r\n        { XScale: 0, YScale: 250 - 212 - 2, width: 6, height: 10 },\r\n        { XScale: 40 - 32, YScale: 240 - 212 - 2, width: 8, height: 20 },\r\n        { XScale: 49 - 32, YScale: 234 - 212 - 2, width: 10, height: 24 },\r\n        { XScale: 60 - 32, YScale: 224 - 212 - 2, width: 8, height: 56 },\r\n        { XScale: 68 - 32, YScale: 224 - 212 - 2, width: 10, height: 56 },\r\n        { XScale: 78 - 32, YScale: 240 - 212, width: 14, height: 40 },\r\n        { XScale: 93 - 32, YScale: 258 - 212 - 2, width: 30, height: 20 }\r\n      ]\r\n    ]\r\n  }\r\n  collisionBoxs: CollisionBox[]\r\n\r\n  constructor(public canvasCtx: CanvasRenderingContext2D) {\r\n    const kindTypeList: ObstacleType[] = [\r\n      'CACTUS_SINGLE',\r\n      'CACTUS_DOUBLE',\r\n      'CACTUS_THREE',\r\n      'CACTUS_FOUR',\r\n      'PTERODACTYL'\r\n    ]\r\n    const kindType = kindTypeList[getRandomNum(0, 4)]\r\n    this.sprite = Obstacle.kindSpriteMap[kindType][0]\r\n    this.dimensions.height = this.sprite.HEIGHT\r\n    this.dimensions.width = this.sprite.WIDTH\r\n    this.isCactus = kindType.startsWith('CACTUS')\r\n\r\n    // 体积控制\r\n    let coefficient = Obstacle.cactusVolumeList[Math.round(Math.random())]\r\n\r\n    // 约束初期大小\r\n    Game.currentSpeed < 10 &&\r\n      ['CACTUS_FOUR', 'CACTUS_THREE'].includes(kindType) &&\r\n      (coefficient = 0.6)\r\n\r\n    if (this.isCactus) {\r\n      this.dimensions.height *= coefficient\r\n      this.dimensions.width *= coefficient\r\n      this.Y =\r\n        Game.config.CANVAS_HEIGHT - this.dimensions.height - Obstacle.config.FOOT_SINK\r\n    } else {\r\n      this.Y = getRandomNum(Obstacle.config.MAX_SKY_LEVEL, Obstacle.config.MIN_SKY_LEVEL)\r\n    }\r\n\r\n    this.gap = this.getGap()\r\n    this.gap > Game.config.CANVAS_WIDTH && (this.gap = Game.config.CANVAS_WIDTH)\r\n    this.collisionBoxs = this.setCollisionBoxs(kindType, coefficient)\r\n  }\r\n\r\n  /**\r\n   * 绘制地面\r\n   */\r\n  draw() {\r\n    this.canvasCtx.drawImage(\r\n      imageSprite.image,\r\n      this.sprite.X,\r\n      this.sprite.Y,\r\n      this.sprite.WIDTH,\r\n      this.sprite.HEIGHT,\r\n      this.X,\r\n      this.Y,\r\n      this.dimensions.width,\r\n      this.dimensions.height\r\n    )\r\n  }\r\n\r\n  /**\r\n   * 更新障碍物的位置\r\n   * @param speed\r\n   */\r\n  update(deltaTime: number) {\r\n    if (!this.isCactus) {\r\n      this.cumulativeTime += deltaTime\r\n      if (this.cumulativeTime - Obstacle.config.PTERODACTYL_FREQUENCY > 0) {\r\n        this.cumulativeTime = 0\r\n        this.currentSpriteIndex = this.currentSpriteIndex ? 0 : 1\r\n        this.sprite = Obstacle.kindSpriteMap['PTERODACTYL'][this.currentSpriteIndex]\r\n        this.collisionBoxs = this.setCollisionBoxs('PTERODACTYL', 1)\r\n      }\r\n    }\r\n    const oldX = this.X\r\n    const oldY = this.Y\r\n    const increment = Math.floor(\r\n      Game.currentSpeed * (runTime.getFPS() / 1000) * deltaTime\r\n    )\r\n    if (!this.isHide) {\r\n      this.X -= increment\r\n      this.draw()\r\n      this.collisionBoxs.forEach(box =>\r\n        box.setPosition(box.X + this.X - oldX, box.Y + this.Y - oldY)\r\n      )\r\n    }\r\n  }\r\n\r\n  setCollisionBoxs(kindType: ObstacleType, coefficient: number) {\r\n    const collsionConfigList =\r\n      kindType === 'PTERODACTYL'\r\n        ? this.kindCollisionBoxMap[kindType][this.currentSpriteIndex]\r\n        : this.kindCollisionBoxMap[kindType]\r\n    return collsionConfigList.map(item => {\r\n      return new CollisionBox(\r\n        this.X + Math.ceil(item.XScale * coefficient),\r\n        this.Y + Math.ceil(item.YScale * coefficient),\r\n        Math.ceil(item.width * coefficient),\r\n        Math.ceil(item.height * coefficient)\r\n      )\r\n    })\r\n  }\r\n  /**\r\n   * 随机获得距离下一个障碍物的间距\r\n   */\r\n  getGap() {\r\n    const {\r\n      CACUTS_MIN_GAD,\r\n      PTERODACTYL_MIN_GAD,\r\n      MIN_GAP_COEFFICIENT,\r\n      MAX_GAP_COEFFICIENT\r\n    } = Obstacle.config\r\n    const initMinGap = this.isCactus ? CACUTS_MIN_GAD : PTERODACTYL_MIN_GAD\r\n    const minGap = Math.round(\r\n      this.dimensions.width * 0.5 * Game.currentSpeed + initMinGap * MIN_GAP_COEFFICIENT\r\n    )\r\n    const maxGap = Math.round(minGap * MAX_GAP_COEFFICIENT)\r\n    return getRandomNum(minGap, maxGap)\r\n  }\r\n  /**\r\n   * 检测是否超出画布\r\n   */\r\n  get isHide() {\r\n    return this.X < -this.dimensions.width\r\n  }\r\n}\r\n","import imageSprite from '@/game/sprite/ImageSprite'\r\nimport { Sprite } from '../types'\r\nimport Game from '..'\r\nimport { eventBus } from '@/utils/eventBus'\r\n\r\n/**\r\n * 星星\r\n * 没有碰撞体积的装饰物\r\n * @param {CanvasRenderingContext2D} canvasCtx 载入到实例的canvas2D上下文\r\n * @constructor\r\n */\r\nexport default class DistanceMeter {\r\n  // 数字的精灵序列\r\n  static sprite: Sprite = { X: 1294, Y: 2, WIDTH: 18, HEIGHT: 22 }\r\n  // 精灵图中数字的距离差\r\n  static numberSpriteDistance = 20\r\n  static wordsSprite: Sprite = { X: 1514, Y: 2, WIDTH: 20, HEIGHT: 18 }\r\n  /**\r\n   * 星星基本配置\r\n   * @enum {number}\r\n   */\r\n  static config = {\r\n    NUMBER_WIDTH: 20,\r\n    FLASH_TIME: 2000,\r\n    FLAGH_FREQUENCY: 400\r\n  }\r\n\r\n  maxScoreUnits = 5\r\n  static currentMaxScore = 0\r\n\r\n  highScore: number //历史最高分\r\n\r\n  // 距离计算使用\r\n  cumulativeTime = 0 //累加时间\r\n\r\n  // 闪烁配置\r\n  isFlash = false\r\n  alearyChangeTime = 0 //明暗切换时间\r\n  alearyFlashTime = 0 //已闪烁时间\r\n\r\n  // 基于容器坐标\r\n  X = Game.config.CANVAS_WIDTH - 2 * DistanceMeter.config.NUMBER_WIDTH\r\n  Y = 5\r\n\r\n  constructor(public canvasCtx: CanvasRenderingContext2D) {\r\n    this.highScore = parseInt(localStorage.highScore) || 0\r\n    eventBus.$on('crashed', () => this.contrastScore())\r\n  }\r\n\r\n  init() {\r\n    for (let i = 0; i < this.maxScoreUnits; i++) {\r\n      this.draw(i, 0)\r\n    }\r\n    this.drawHighScore()\r\n  }\r\n\r\n  /**\r\n   * 绘制数字\r\n   */\r\n  draw(unitIndex: number, value: number, isHigh = false) {\r\n    let leaveBlankCount = 1\r\n    isHigh && (leaveBlankCount = this.maxScoreUnits + 2)\r\n    const { sprite, config } = DistanceMeter\r\n    const spriteX = sprite.X + value * config.NUMBER_WIDTH\r\n    const canvasX = this.X - (unitIndex + leaveBlankCount) * config.NUMBER_WIDTH\r\n\r\n    this.canvasCtx.save()\r\n    this.canvasCtx.drawImage(\r\n      imageSprite.image,\r\n      spriteX,\r\n      DistanceMeter.sprite.Y,\r\n      DistanceMeter.sprite.WIDTH,\r\n      DistanceMeter.sprite.HEIGHT,\r\n      canvasX,\r\n      this.Y,\r\n      DistanceMeter.sprite.WIDTH,\r\n      DistanceMeter.sprite.HEIGHT\r\n    )\r\n    this.canvasCtx.restore()\r\n  }\r\n\r\n  update(deltaTime: number) {\r\n    const increment = this.getActualDistance(deltaTime)\r\n    // 用于控制闪烁\r\n    const oldScore = DistanceMeter.currentMaxScore\r\n    DistanceMeter.currentMaxScore += increment\r\n\r\n    let isDraw = true\r\n    let showScore = DistanceMeter.currentMaxScore\r\n    Math.floor(oldScore / 100) < Math.floor(DistanceMeter.currentMaxScore / 100) &&\r\n      (this.isFlash = true)\r\n    if (this.isFlash) {\r\n      isDraw = false\r\n      // 总闪烁时间\r\n      this.alearyFlashTime += deltaTime\r\n      if (this.alearyFlashTime > DistanceMeter.config.FLASH_TIME) {\r\n        this.isFlash = false\r\n        this.alearyFlashTime = 0\r\n      }\r\n      // 闪烁间隔控制\r\n      this.alearyChangeTime += deltaTime\r\n      const { FLAGH_FREQUENCY } = DistanceMeter.config\r\n      if (this.alearyChangeTime > 2 * FLAGH_FREQUENCY) {\r\n        this.alearyChangeTime = 0\r\n      } else if (this.alearyChangeTime > FLAGH_FREQUENCY) {\r\n        isDraw = true\r\n        showScore = Math.floor(DistanceMeter.currentMaxScore / 100) * 100\r\n      }\r\n    }\r\n    const scoreUnitValueList = String(showScore).split('')\r\n    this.complementZeroByMaxUnit(scoreUnitValueList)\r\n    if (isDraw) {\r\n      scoreUnitValueList.forEach((number, index) =>\r\n        this.draw(scoreUnitValueList.length - 1 - index, Number(number))\r\n      )\r\n    }\r\n    this.drawHighScore()\r\n  }\r\n\r\n  drawHighScore() {\r\n    this.canvasCtx.globalAlpha = 0.6\r\n    const highScoreUnitList = String(this.highScore).split('')\r\n    this.complementZeroByMaxUnit(highScoreUnitList)\r\n    highScoreUnitList.unshift(...['10', '11', '12'])\r\n    highScoreUnitList.forEach((number, index) =>\r\n      this.draw(highScoreUnitList.length - 1 - index, Number(number), true)\r\n    )\r\n    this.canvasCtx.globalAlpha = 1\r\n  }\r\n  /**\r\n   * 对比替换当前分和历史最高分\r\n   */\r\n  contrastScore() {\r\n    if (DistanceMeter.currentMaxScore > this.highScore) {\r\n      this.highScore = DistanceMeter.currentMaxScore\r\n      localStorage.highScore = this.highScore\r\n    }\r\n  }\r\n\r\n  reSet() {\r\n    DistanceMeter.currentMaxScore = 0\r\n    this.init()\r\n  }\r\n\r\n  /**\r\n   * 计算获得实际分距离\r\n   * @param deltaTime\r\n   */\r\n  getActualDistance(deltaTime: number) {\r\n    this.cumulativeTime += deltaTime\r\n    const increment = Math.round((Game.currentSpeed / 1500) * this.cumulativeTime)\r\n    increment && (this.cumulativeTime = 0)\r\n    return increment\r\n  }\r\n\r\n  /**\r\n   * 根据最大单位前置补零\r\n   * @param numberList 填充的数字列表\r\n   */\r\n  complementZeroByMaxUnit(numberList: Array<string | number>) {\r\n    // 前置补零\r\n    while (numberList.length < this.maxScoreUnits) {\r\n      numberList.unshift('0')\r\n    }\r\n  }\r\n}\r\n","import Cloud from '../sprite/Cloud'\r\nimport Ground from '../sprite/Ground'\r\nimport Game from '..'\r\nimport Moon from '../sprite/Moon'\r\nimport Star from '../sprite/star'\r\nimport { eventBus } from '@/utils/eventBus'\r\nimport { getRandomNum } from '@/utils'\r\nimport Obstacle from '../sprite/Obstacle'\r\nimport DistanceMeter from './DistanceMeter'\r\n\r\nexport default class Stage {\r\n  /**\r\n   * Stage config.\r\n   * @enum {number}\r\n   */\r\n  static config = {\r\n    ALTERNATE_TIME: 30000,\r\n    BG_CLOUD_SPEED: 1,\r\n    BUMPY_THRESHOLD: 0.3,\r\n    CLOUD_FREQUENCY: 0.5, //控制云的随机出现\r\n    MAX_STAR: 8, //星星最大数量\r\n    MAX_CLOUDS: 6 //云朵最大数量\r\n  }\r\n\r\n  static isNight = true\r\n\r\n  moon: Moon\r\n  starList: Star[] = []\r\n  // 星体配置\r\n  astralSpeed = Game.config.CANVAS_WIDTH / Stage.config.ALTERNATE_TIME\r\n\r\n  cloudList: Cloud[] = []\r\n  ground: Ground\r\n  obstacleList: Obstacle[] = []\r\n\r\n  /**\r\n   * 初始化游戏舞台\r\n   */\r\n  constructor(public canvasCtx: CanvasRenderingContext2D) {\r\n    this.ground = new Ground(this.canvasCtx)\r\n    this.moon = new Moon(this.canvasCtx)\r\n    eventBus.$on('alternate', (matches: boolean) => (Stage.isNight = matches))\r\n  }\r\n\r\n  init() {\r\n    console.log('初始化游戏舞台')\r\n    if (Stage.isNight) {\r\n      this.generateStarList()\r\n      this.moon.update(0, 0)\r\n    }\r\n  }\r\n\r\n  update(deltaTime: number) {\r\n    this.ground.update(deltaTime)\r\n    this.updateMoonAndStar(deltaTime)\r\n    this.updateCloudList(deltaTime)\r\n    DistanceMeter.currentMaxScore > 30 && this.updateObstacleList(deltaTime)\r\n  }\r\n\r\n  updateMoonAndStar(deltaTime: number) {\r\n    const speed = this.astralSpeed * deltaTime\r\n    this.updateStarList(speed)\r\n    this.moon.update(deltaTime, speed)\r\n  }\r\n  updateStarList(speed: number) {\r\n    this.starList.forEach(star => star.update(speed))\r\n\r\n    this.starList.length || this.addCould()\r\n    const starCount = this.starList.length\r\n\r\n    const { MAX_STAR } = Stage.config\r\n    // 初始化用\r\n    const lastStar = this.starList[starCount - 1] || { X: 0 }\r\n    if (\r\n      Math.random() < 0.5 &&\r\n      lastStar.X < Game.config.CANVAS_WIDTH - Star.config.MIN_GAD &&\r\n      starCount < MAX_STAR\r\n    ) {\r\n      this.starList.push(new Star(this.canvasCtx))\r\n    }\r\n    this.starList = this.starList.filter(star => !star.isHide)\r\n  }\r\n\r\n  updateObstacleList(deltaTime: number) {\r\n    this.obstacleList.forEach(obstacle => obstacle.update(deltaTime))\r\n    this.obstacleList.length || this.obstacleList.push(new Obstacle(this.canvasCtx))\r\n    const obstacleCount = this.obstacleList.length\r\n\r\n    // 随机生成障碍物\r\n    const lastObstacle = this.obstacleList[obstacleCount - 1]\r\n    const { CANVAS_WIDTH } = Game.config\r\n\r\n    if (CANVAS_WIDTH - lastObstacle.X > lastObstacle.gap && Math.random() > 0.9) {\r\n      this.obstacleList.push(new Obstacle(this.canvasCtx))\r\n    }\r\n    this.obstacleList = this.obstacleList.filter(obstacle => !obstacle.isHide)\r\n  }\r\n  updateCloudList(deltaTime: number) {\r\n    // 执行过程产生的时间*每毫秒的云基础速度*当前速度\r\n    const cloudSpeed =\r\n      (Stage.config.BG_CLOUD_SPEED / 1000) * deltaTime * Game.currentSpeed\r\n    this.cloudList.forEach(cloud => cloud.update(cloudSpeed))\r\n\r\n    // 序列没有云朵就添加一个云朵\r\n    this.cloudList.length || this.addCould()\r\n    const cloudCount = this.cloudList.length\r\n\r\n    // 最后随机补云\r\n    const lastCloud = this.cloudList[cloudCount - 1]\r\n    const { CANVAS_WIDTH } = Game.config\r\n    const { MAX_CLOUDS, CLOUD_FREQUENCY } = Stage.config\r\n    if (\r\n      CANVAS_WIDTH - lastCloud.X >= lastCloud.cloudGap &&\r\n      CLOUD_FREQUENCY > Math.random() &&\r\n      cloudCount < MAX_CLOUDS\r\n    ) {\r\n      this.addCould()\r\n    }\r\n    this.cloudList = this.cloudList.filter(cloud => !cloud.isHide)\r\n  }\r\n\r\n  // 初始化使用\r\n  generateStarList() {\r\n    let length = this.starList.length\r\n    while (length < Stage.config.MAX_STAR) {\r\n      const X = getRandomNum(0, Game.config.CANVAS_WIDTH)\r\n      Math.random() < 0.5 && this.starList.push(new Star(this.canvasCtx, X))\r\n      length++\r\n    }\r\n  }\r\n  addCould() {\r\n    this.cloudList.push(new Cloud(this.canvasCtx))\r\n  }\r\n\r\n  reSet() {\r\n    this.obstacleList = []\r\n    this.starList = []\r\n    this.init()\r\n  }\r\n}\r\n","import imageSprite from './ImageSprite'\r\nimport { Sprite, TrexStatus } from '../types'\r\nimport Game from '..'\r\nimport CollisionBox from '../role/CollisionBox'\r\n\r\nimport cloneDeep from 'lodash/cloneDeep'\r\n\r\n/**\r\n * Trex\r\n * @param {CanvasRenderingContext2D} canvasCtx 载入到实例的canvas2D上下文\r\n * @param {Sprite} sprite 实例的精灵信息\r\n * @constructor\r\n */\r\nexport default class Trex {\r\n  // 小恐龙的精灵图位置\r\n  static sprite: Sprite = { X: 1942, Y: 2, WIDTH: 88, HEIGHT: 94 }\r\n\r\n  /**\r\n   * 小恐龙的基本配置\r\n   */\r\n  static config = {\r\n    HEIGHT_DUCK: 60,\r\n    WIDTH_DUCK: 118,\r\n    FOOTSINK: 20, //下限尺寸\r\n    MAX_JUMP_HEIGHT: 60,\r\n    MIN_JUMP_HEIGHT: 60, //弹性弹跳先不做\r\n    INIITAL_JUMP_VELOCITY: -20,\r\n    SPEED_DROP_COEFFICIENT: 3, //下降速度系数\r\n    GRAVITY: 1.2, //重力\r\n    BLINK_TIMING: 7000 //7秒延时眼睛\r\n  }\r\n  // 精灵各类行为帧序列\r\n  static behavior = {\r\n    WAITING: [\r\n      { X: 1678, Y: 2 },\r\n      { X: 1766, Y: 2 }\r\n    ],\r\n    RUNNING: [\r\n      { X: 1854, Y: 2 },\r\n      { X: 1942, Y: 2 }\r\n    ],\r\n    JUMPING: [{ X: 1678, Y: 2 }],\r\n    DUCKING: [\r\n      { X: 2206, Y: 36 },\r\n      { X: 2324, Y: 36 }\r\n    ],\r\n    CRASHED: [{ X: 2030, Y: 2 }]\r\n  }\r\n\r\n  // 各类行为切换所需（毫秒/帧）\r\n  static behaviorFrameStamp = {\r\n    WAITING: 1000 / 3,\r\n    DUCKING: 1000 / 8,\r\n    RUNNING: 1000 / 12,\r\n    JUMPING: 1000 / 60,\r\n    CRASHED: 1000 / 60\r\n  }\r\n\r\n  // 当前精灵行为索引\r\n  currentBehaviorIndex = 0\r\n\r\n  collisionBoxs: CollisionBox[]\r\n\r\n  // 基础Y轴坐标\r\n  baseY = Game.config.CANVAS_HEIGHT - Trex.sprite.HEIGHT - Trex.config.FOOTSINK\r\n\r\n  X = 30 // 恐龙的X坐标(不变)\r\n  Y = this.baseY // 角色的Y坐标\r\n\r\n  readonly behaviorCollsionBoxMap = {\r\n    WAITING: [\r\n      new CollisionBox(32, 220, 20, 28),\r\n      new CollisionBox(50, 220, 34, 56),\r\n      new CollisionBox(84, 220, 10, 30),\r\n      new CollisionBox(95, 220, 4, 16),\r\n      new CollisionBox(72, 190, 42, 30)\r\n    ],\r\n    RUNNING: [\r\n      new CollisionBox(32, 220, 20, 28),\r\n      new CollisionBox(50, 220, 34, 56),\r\n      new CollisionBox(84, 220, 10, 30),\r\n      new CollisionBox(95, 220, 4, 16),\r\n      new CollisionBox(72, 190, 42, 30)\r\n    ],\r\n    JUMPING: [\r\n      new CollisionBox(32, 220, 20, 28),\r\n      new CollisionBox(50, 220, 34, 56),\r\n      new CollisionBox(84, 220, 10, 30),\r\n      new CollisionBox(95, 220, 4, 16),\r\n      new CollisionBox(72, 190, 42, 30)\r\n    ],\r\n    DUCKING: [\r\n      new CollisionBox(32, 224, 20, 26),\r\n      new CollisionBox(53, 226, 22, 50),\r\n      new CollisionBox(76, 230, 24, 38),\r\n      new CollisionBox(100, 230, 40, 26)\r\n    ],\r\n    CRASHED: [\r\n      new CollisionBox(32, 220, 20, 28),\r\n      new CollisionBox(50, 220, 34, 56),\r\n      new CollisionBox(84, 220, 10, 30),\r\n      new CollisionBox(95, 220, 4, 16),\r\n      new CollisionBox(72, 190, 42, 30)\r\n    ]\r\n  }\r\n\r\n  cumulativeTime = 0 //动作时间\r\n  status: TrexStatus = 'WAITING'\r\n\r\n  // WAITING\r\n  blinkTimeout = 0 //眨眼计时器\r\n  blinkDelay = 0 //眨眼频率时间\r\n  isWaitBlik = false //是否等待眨眼\r\n\r\n  // JUMPING\r\n  jumpCount = 0\r\n  jumpLimitY = this.baseY - Trex.config.MAX_JUMP_HEIGHT\r\n  jumpVelocity = Trex.config.INIITAL_JUMP_VELOCITY - Game.currentSpeed / 10 //跳跃速度\r\n  landing = false\r\n  speedDrop = false\r\n\r\n  constructor(public canvasCtx: CanvasRenderingContext2D) {\r\n    this.Y = this.baseY\r\n    this.collisionBoxs = cloneDeep(this.behaviorCollsionBoxMap.WAITING)\r\n    this.draw()\r\n  }\r\n\r\n  /**\r\n   * @通用方法 更新画布\r\n   * @param  deltaTime\r\n   */\r\n  update(deltaTime: number) {\r\n    const oldX = this.X\r\n    const oldY = this.Y\r\n    const oldStatus = this.status\r\n    this.cumulativeTime += deltaTime\r\n    const statusUpdateMap = {\r\n      WAITING: () => this.startWait(),\r\n      JUMPING: () => this.updateJump(deltaTime),\r\n      RUNNING: () => this.updateRunAndDuck(),\r\n      DUCKING: () => this.updateRunAndDuck(),\r\n      CRASHED: () => this.updateCrashed()\r\n    }\r\n\r\n    statusUpdateMap[this.status]()\r\n    this.draw()\r\n\r\n    // 设置碰撞盒子\r\n    let differenceX = this.X - oldX\r\n    let differenceY = this.Y - oldY\r\n    if (oldStatus !== this.status) {\r\n      differenceX = differenceY = 0\r\n      this.collisionBoxs = cloneDeep(this.behaviorCollsionBoxMap[this.status])\r\n    }\r\n\r\n    this.collisionBoxs.forEach(box => {\r\n      box.setPosition(box.X + differenceX, box.Y + differenceY)\r\n    })\r\n  }\r\n\r\n  draw() {\r\n    const { X, Y } = Trex.behavior[this.status][this.currentBehaviorIndex]\r\n    let spriteWidth = Trex.sprite.WIDTH\r\n    let spriteHeight = Trex.sprite.HEIGHT\r\n\r\n    if (this.status === 'DUCKING') {\r\n      spriteWidth = Trex.config.WIDTH_DUCK\r\n      spriteHeight = Trex.config.HEIGHT_DUCK\r\n    }\r\n\r\n    this.canvasCtx.drawImage(\r\n      imageSprite.image,\r\n      X,\r\n      Y,\r\n      spriteWidth,\r\n      spriteHeight,\r\n      this.X,\r\n      this.Y,\r\n      spriteWidth,\r\n      spriteHeight\r\n    )\r\n  }\r\n\r\n  /**\r\n   * 奔跑和闪躲的序列\r\n   */\r\n  updateRunAndDuck() {\r\n    if (this.cumulativeTime >= this.currentFrameStamp) {\r\n      // 0，1转换\r\n      this.currentBehaviorIndex = this.currentBehaviorIndex ^ 1\r\n      this.cumulativeTime = 0\r\n    }\r\n  }\r\n\r\n  /**\r\n   *跳跃序列\r\n   * @param deltaTime\r\n   */\r\n  updateJump(deltaTime: number) {\r\n    this.currentBehaviorIndex = 0\r\n    // 已知 requestAnimationFrame 每秒执行60次  16.66..ms执行1次\r\n    // jump的FrameStamp也等于\r\n    // 既当每次Update之间的deltaTime的是恒定，则framesElapsed恒定1\r\n    // 用来控制每次方法之间增量时间不均匀时，保证速度匀速\r\n    const framesElapsed = deltaTime / this.currentFrameStamp\r\n    const { SPEED_DROP_COEFFICIENT } = Trex.config\r\n    // 默认上升\r\n    let increment = this.jumpVelocity * framesElapsed\r\n    // 如果按下闪躲键将加快降落\r\n    this.speedDrop && (increment = Math.abs(increment * SPEED_DROP_COEFFICIENT))\r\n    //判断降落\r\n    if (this.Y <= this.jumpLimitY || this.speedDrop) {\r\n      this.landing = true\r\n    }\r\n    this.Y += Math.round(increment)\r\n    // 增加重力\r\n    this.jumpVelocity += Trex.config.GRAVITY * framesElapsed\r\n    // 落地奔跑\r\n    if (this.landing && this.Y >= this.baseY) {\r\n      this.landing = false\r\n      this.status = this.speedDrop ? 'DUCKING' : 'RUNNING'\r\n      this.cumulativeTime = 0\r\n      this.Y = this.baseY\r\n      this.speedDrop && (this.Y += 28)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 碰撞序列\r\n   */\r\n  updateCrashed() {\r\n    this.currentBehaviorIndex = 0\r\n  }\r\n\r\n  /**\r\n   * 等待眨眼序列\r\n   */\r\n  startWait() {\r\n    // 设置眨眼\r\n    this.isWaitBlik = true\r\n    this.blinkDelay = Math.ceil(Math.random() * Trex.config.BLINK_TIMING)\r\n    this.blinkTimeout = setTimeout(() => {\r\n      if (this.status !== 'WAITING') {\r\n        clearTimeout(this.blinkTimeout)\r\n        return\r\n      }\r\n      this.currentBehaviorIndex = 1\r\n      this.draw()\r\n      setTimeout(() => {\r\n        this.isWaitBlik = false\r\n        this.currentBehaviorIndex = 0\r\n        this.draw()\r\n        this.startWait()\r\n      }, 200)\r\n    }, this.blinkDelay)\r\n  }\r\n\r\n  /**\r\n   * 跳跃按下指令\r\n   */\r\n  startJump() {\r\n    this.status = 'JUMPING'\r\n    this.jumpVelocity = Trex.config.INIITAL_JUMP_VELOCITY - 7 / 10 //跳跃速度\r\n    this.speedDrop = false\r\n  }\r\n\r\n  /**\r\n   * 闪避按下指令\r\n   */\r\n  startDuck() {\r\n    this.status = 'DUCKING'\r\n    this.Y = this.baseY + 28\r\n  }\r\n  /**\r\n   * 闪避松开指令\r\n   */\r\n  endDuck() {\r\n    this.status = 'RUNNING'\r\n    this.Y = this.baseY\r\n  }\r\n\r\n  reSet() {\r\n    this.status = 'RUNNING'\r\n    this.Y = this.baseY\r\n  }\r\n\r\n  // 当前行为帧所占毫秒\r\n  get currentFrameStamp() {\r\n    return Trex.behaviorFrameStamp[this.status]\r\n  }\r\n}\r\n","import CollisionBox from './CollisionBox'\r\nimport { eventBus } from '@/utils/eventBus'\r\nimport ImageSprite from '../sprite/ImageSprite'\r\nimport Game from '..'\r\n\r\nexport default class Rule {\r\n  static textSprite = { X: 1294, Y: 26, WIDTH: 384, HEIGHT: 24 }\r\n  static buttonSprite = { X: 2, Y: 2, WIDTH: 72, HEIGHT: 64 }\r\n  /**\r\n   *\r\n   * @param trexBox 小恐龙盒子\r\n   * @param obstacleBox 障碍物盒子\r\n   */\r\n  detectCollision(trexBox: CollisionBox, obstacleBox: CollisionBox) {\r\n    if (\r\n      trexBox.X + trexBox.WIDTH >= obstacleBox.X &&\r\n      trexBox.X <= obstacleBox.X + obstacleBox.WIDTH &&\r\n      trexBox.Y + trexBox.HEIGHT >= obstacleBox.Y &&\r\n      trexBox.Y <= obstacleBox.Y + obstacleBox.HEIGHT\r\n    ) {\r\n      eventBus.$emit('crashed')\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param trexBoxs 小恐龙盒子列表\r\n   * @param obstacleBoxs 障碍物盒子列表\r\n   */\r\n  detectCollisionList(trexBoxs: CollisionBox[], obstacleBoxs: CollisionBox[]) {\r\n    trexBoxs.forEach(trexBox => {\r\n      obstacleBoxs.forEach(obBox => {\r\n        this.detectCollision(trexBox, obBox)\r\n      })\r\n    })\r\n  }\r\n\r\n  gameOver(canvasCtx: CanvasRenderingContext2D) {\r\n    const { CANVAS_WIDTH, CANVAS_HEIGHT } = Game.config\r\n    const { textSprite, buttonSprite } = Rule\r\n    canvasCtx.drawImage(\r\n      ImageSprite.image,\r\n      textSprite.X,\r\n      textSprite.Y,\r\n      textSprite.WIDTH,\r\n      textSprite.HEIGHT,\r\n      CANVAS_WIDTH / 2 - textSprite.WIDTH / 2,\r\n      CANVAS_HEIGHT / 2 - textSprite.HEIGHT / 2 - buttonSprite.WIDTH,\r\n      textSprite.WIDTH,\r\n      textSprite.HEIGHT\r\n    )\r\n    canvasCtx.drawImage(\r\n      ImageSprite.image,\r\n      buttonSprite.X,\r\n      buttonSprite.Y,\r\n      Rule.buttonSprite.WIDTH,\r\n      Rule.buttonSprite.HEIGHT,\r\n      CANVAS_WIDTH / 2 - buttonSprite.WIDTH / 2,\r\n      CANVAS_HEIGHT / 2 - textSprite.HEIGHT / 2,\r\n      buttonSprite.WIDTH,\r\n      buttonSprite.HEIGHT\r\n    )\r\n  }\r\n}\r\n","import Stage from './stage'\r\nimport { getTimeStamp } from '@/utils'\r\nimport Trex from './sprite/Trex'\r\nimport { GameStatus } from './types'\r\n\r\nimport { eventBus } from '@/utils/eventBus'\r\nimport DistanceMeter from './stage/DistanceMeter'\r\nimport Rule from './role/Rule'\r\nexport default class Game {\r\n  // 游戏基本设置\r\n  static config = {\r\n    CANVAS_WIDTH: 1200,\r\n    CANVAS_HEIGHT: 300,\r\n    PLAYER_COUNT: 1,\r\n    INIT_SPEED: 7,\r\n    LIMIT_SPEED: 30\r\n  }\r\n  // 全局传递速度\r\n  static currentSpeed = Game.config.INIT_SPEED\r\n\r\n  stage: Stage // 游戏舞台\r\n  distanceMeter: DistanceMeter //仪表盘\r\n  tRex: Trex // 恐龙\r\n\r\n  rule: Rule //规则\r\n\r\n  // 游戏消耗时长\r\n  consumeTime = 0\r\n  // 游戏状态\r\n  status: GameStatus = 'WAITING'\r\n\r\n  // 动画请求Id\r\n  reqFrameId = 0\r\n\r\n  constructor(\r\n    public canvasCtx: CanvasRenderingContext2D,\r\n    options: Partial<typeof Game.config>\r\n  ) {\r\n    Game.config = { ...Game.config, ...options }\r\n    this.stage = new Stage(this.canvasCtx)\r\n    this.tRex = new Trex(this.canvasCtx)\r\n    this.distanceMeter = new DistanceMeter(this.canvasCtx)\r\n    this.rule = new Rule()\r\n    this.init()\r\n  }\r\n  init() {\r\n    this.setSpeed(Game.config.INIT_SPEED)\r\n    eventBus.$emit('resize') //告诉vue触发resize\r\n    this.startListening()\r\n    this.stage.ground.init()\r\n    this.tRex.startWait()\r\n  }\r\n  update() {\r\n    const now = getTimeStamp()\r\n    const deltaTime = now - (this.consumeTime || now)\r\n    this.consumeTime = now\r\n    this.status !== 'CRASHED' && this.clearCanvas()\r\n    if (this.status === 'BOOTING') {\r\n      if (this.tRex.status === 'RUNNING') {\r\n        this.stage.ground.gameBoot()\r\n        if (this.stage.ground.animationWidth >= Game.config.CANVAS_WIDTH) {\r\n          this.stage.init()\r\n          this.distanceMeter.init()\r\n          this.status = 'PLAYING'\r\n          eventBus.$emit('resize') //告诉vue触发resize\r\n        }\r\n      } else {\r\n        this.stage.ground.init()\r\n      }\r\n    }\r\n\r\n    if (this.status === 'PLAYING') {\r\n      this.stage.update(deltaTime)\r\n      this.distanceMeter.update(deltaTime)\r\n\r\n      // 加速度\r\n      let increaseSpeed = 2 * (deltaTime / 10000)\r\n      increaseSpeed > 24 && (increaseSpeed = 24)\r\n      Game.currentSpeed += increaseSpeed\r\n      const readyObstacle = this.stage.obstacleList.find(\r\n        item => item.X + item.dimensions.width > this.tRex.X\r\n      )\r\n      // 碰撞判断\r\n      readyObstacle &&\r\n        this.rule.detectCollisionList(\r\n          this.tRex.collisionBoxs,\r\n          readyObstacle.collisionBoxs\r\n        )\r\n    }\r\n    this.tRex.update(deltaTime)\r\n    // over判断\r\n    this.status !== 'CRASHED' && this.scheduleNextUpdate()\r\n  }\r\n\r\n  // 安排下一次更新\r\n  scheduleNextUpdate() {\r\n    this.reqFrameId = requestAnimationFrame(this.update.bind(this))\r\n  }\r\n\r\n  clearCanvas() {\r\n    const { CANVAS_WIDTH, CANVAS_HEIGHT } = Game.config\r\n    this.canvasCtx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\r\n  }\r\n\r\n  setSpeed(speed: number) {\r\n    speed && (Game.currentSpeed = speed)\r\n  }\r\n\r\n  onCrashed() {\r\n    this.status = 'CRASHED'\r\n    this.tRex.status = 'CRASHED'\r\n    cancelAnimationFrame(this.reqFrameId)\r\n    this.scheduleNextUpdate()\r\n    this.rule.gameOver(this.canvasCtx)\r\n  }\r\n  reSet() {\r\n    this.clearCanvas()\r\n    this.setSpeed(Game.config.INIT_SPEED)\r\n    this.status = 'PLAYING'\r\n    this.consumeTime = 0\r\n    this.tRex.reSet()\r\n    this.stage.reSet()\r\n    this.distanceMeter.reSet()\r\n    this.scheduleNextUpdate()\r\n  }\r\n  onClick() {\r\n    this.status === 'CRASHED' && this.reSet()\r\n  }\r\n\r\n  onkeydown(e: KeyboardEvent) {\r\n    if ([87, 38, 32].includes(e.keyCode)) {\r\n      if (this.status === 'WAITING') {\r\n        this.status = 'BOOTING'\r\n        this.scheduleNextUpdate()\r\n      }\r\n\r\n      this.tRex.status !== 'JUMPING' && this.tRex.startJump()\r\n    }\r\n    if ([83, 40].includes(e.keyCode)) {\r\n      if (this.tRex.status === 'JUMPING') this.tRex.speedDrop = true\r\n      else if (['RUNNING', 'DUCKING'].includes(this.tRex.status)) this.tRex.startDuck()\r\n    }\r\n  }\r\n\r\n  onkeyup(e: KeyboardEvent) {\r\n    if ([83, 40].includes(e.keyCode)) {\r\n      if (this.tRex.status === 'JUMPING') this.tRex.speedDrop = false\r\n      else if (['RUNNING', 'DUCKING'].includes(this.tRex.status)) this.tRex.endDuck()\r\n    }\r\n  }\r\n  startListening() {\r\n    console.log('设置游戏监听')\r\n    document.onclick = () => this.onClick()\r\n    document.onkeydown = e => this.onkeydown(e)\r\n    document.onkeyup = e => this.onkeyup(e)\r\n    eventBus.$on('crashed', () => this.onCrashed())\r\n  }\r\n}\r\n","\r\nimport { Component, Vue, Ref } from 'vue-property-decorator'\r\nimport Game from './game'\r\nimport ImageSprite from './game/sprite/ImageSprite'\r\nimport { eventBus } from '@/utils/eventBus'\r\n\r\n@Component\r\nexport default class App extends Vue {\r\n  @Ref() readonly gameRef!: HTMLCanvasElement\r\n  game?: Game\r\n  magnification = 1 // 显示倍数\r\n\r\n  config = {\r\n    CANVAS_WIDTH: 1200,\r\n    CANVAS_HEIGHT: 300\r\n  }\r\n\r\n  get gameCanvasStyle() {\r\n    return { transform: `scale(${this.magnification})` }\r\n  }\r\n\r\n  get gameCtx() {\r\n    return this.gameRef.getContext('2d') as CanvasRenderingContext2D\r\n  }\r\n\r\n  get status() {\r\n    return this.game?.status\r\n  }\r\n  onResize() {\r\n    this.magnification = window.innerWidth / 600\r\n  }\r\n  onUpdateBackground(matches: boolean) {\r\n    document.documentElement.style.setProperty('--bg-color', matches ? '#000' : '#fff')\r\n  }\r\n  start() {\r\n    console.log('游戏加载')\r\n    this.game = new Game(this.gameCtx, this.config)\r\n    this.setListener()\r\n  }\r\n  setListener() {\r\n    console.log('设置页面监听')\r\n    eventBus.$on('resize', () => this.onResize())\r\n    window.onresize = () => this.onResize()\r\n    const mediaList = window.matchMedia('(prefers-color-scheme:dark)')\r\n    mediaList.onchange = e => eventBus.$emit('alternate', e.matches)\r\n    eventBus.$on('alternate', (matches: boolean) => this.onUpdateBackground(matches))\r\n    eventBus.$emit('alternate', mediaList.matches)\r\n  }\r\n  async mounted() {\r\n    await new ImageSprite()\r\n    this.start()\r\n  }\r\n}\r\n","import mod from \"-!../node_modules/.pnpm/registry.npmmirror.com+cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--15-0!../node_modules/.pnpm/registry.npmmirror.com+thread-loader@2.1.3_webpack@4.47.0/node_modules/thread-loader/dist/cjs.js!../node_modules/.pnpm/registry.npmmirror.com+babel-loader@8.3.0_9931588bc96e9653d3c6e9428a50411d/node_modules/babel-loader/lib/index.js!../node_modules/.pnpm/registry.npmmirror.com+ts-loader@6.2.2_typescript@3.7.7/node_modules/ts-loader/index.js??ref--15-3!../node_modules/.pnpm/registry.npmmirror.com+cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@15.11.1_b82239905f60f1b9d11e08b9770d1ccf/node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../node_modules/.pnpm/registry.npmmirror.com+cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--15-0!../node_modules/.pnpm/registry.npmmirror.com+thread-loader@2.1.3_webpack@4.47.0/node_modules/thread-loader/dist/cjs.js!../node_modules/.pnpm/registry.npmmirror.com+babel-loader@8.3.0_9931588bc96e9653d3c6e9428a50411d/node_modules/babel-loader/lib/index.js!../node_modules/.pnpm/registry.npmmirror.com+ts-loader@6.2.2_typescript@3.7.7/node_modules/ts-loader/index.js??ref--15-3!../node_modules/.pnpm/registry.npmmirror.com+cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@15.11.1_b82239905f60f1b9d11e08b9770d1ccf/node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4f094ad0\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=4f094ad0&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/.pnpm/registry.npmmirror.com+vue-loader@15.11.1_b82239905f60f1b9d11e08b9770d1ccf/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable no-console */\r\n\r\nimport { register } from 'register-service-worker'\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  register(`${process.env.BASE_URL}service-worker.js`, {\r\n    ready() {\r\n      console.log(\r\n        'App is being served from cache by a service worker.\\n' +\r\n          'For more details, visit https://goo.gl/AFskqB'\r\n      )\r\n    },\r\n    registered() {\r\n      console.log('Service worker has been registered.')\r\n    },\r\n    cached() {\r\n      console.log('Content has been cached for offline use.')\r\n    },\r\n    updatefound() {\r\n      console.log('New content is downloading.')\r\n    },\r\n    updated() {\r\n      console.log('New content is available; please refresh.')\r\n    },\r\n    offline() {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    },\r\n    error(error) {\r\n      console.error('Error during service worker registration:', error)\r\n    }\r\n  })\r\n}\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport './registerServiceWorker'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n"],"sourceRoot":""}